{"ast":null,"code":"import { createSelector } from \"reselect\";\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["/Users/costeira/Documents/Udemy/nodejs/crwn-clohting/client/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumalatedQuantity","cartItem","quantity","selectCartTotal","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE3CE,IAAI,IAAIA,IAAI,CAACE,SAF8B,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC5C,CAACC,UAAD,CAD4C,EAE3CE,IAAD,IAAUA,IAAI,CAACI,MAF6B,CAAvC;AAKP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAChD,CAACI,eAAD,CADgD,EAEhDC,SAAS,IAAIA,SAAS,CAACI,MAAV,CACX,CAACC,mBAAD,EAAsBC,QAAtB,KAAmCD,mBAAmB,GAAGC,QAAQ,CAACC,QADvD,EAEX,CAFW,CAFmC,CAA3C;AAQP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CAC3C,CAACI,eAAD,CAD2C,EAE3CC,SAAS,IAAIA,SAAS,CAACI,MAAV,CACX,CAACC,mBAAD,EAAsBC,QAAtB,KAAmCD,mBAAmB,GAAIC,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACG,KAD5E,EAEX,CAFW,CAF8B,CAAtC","sourcesContent":["import { createSelector } from \"reselect\";\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector(\n  [selectCart],\n  cart => cart.cartItems\n);\n\nexport const selectCartHidden = createSelector(\n  [selectCart],\n  (cart) => cart.hidden\n)\n\nexport const selectCartItemsCount = createSelector(\n  [selectCartItems],\n  cartItems => cartItems.reduce(\n    (accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity,\n    0\n  )\n);\n\nexport const selectCartTotal = createSelector(\n  [selectCartItems],\n  cartItems => cartItems.reduce(\n    (accumalatedQuantity, cartItem) => accumalatedQuantity + (cartItem.quantity * cartItem.price),\n    0\n  )\n)"]},"metadata":{},"sourceType":"module"}