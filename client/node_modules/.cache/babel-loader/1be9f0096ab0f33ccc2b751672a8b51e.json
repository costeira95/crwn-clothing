{"ast":null,"code":"var _jsxFileName = \"/Users/costeira/Documents/Udemy/nodejs/crwn-clohting/client/src/components/error-boundary/error-boundary.component.jsx\";\nimport React from \"react\";\n\nclass ErrorBoundary extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      hasErrored: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      hasErrored: true\n    };\n  }\n\n  componentDidCatch(error, info) {\n    console.log(error);\n  }\n\n  render() {\n    const {\n      hasErrored\n    } = this.state;\n\n    if (hasErrored) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Something went wrong\");\n    }\n\n    const {\n      children\n    } = this.props;\n    return children;\n  }\n\n}\n\nexport default ErrorBoundary;","map":{"version":3,"sources":["/Users/costeira/Documents/Udemy/nodejs/crwn-clohting/client/src/components/error-boundary/error-boundary.component.jsx"],"names":["React","ErrorBoundary","Component","constructor","state","hasErrored","getDerivedStateFromError","error","componentDidCatch","info","console","log","render","children","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,GAAE;AACX;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAGD;;AAED,SAAOC,wBAAP,CAAgCC,KAAhC,EAAuC;AACrC,WAAO;AACLF,MAAAA,UAAU,EAAE;AADP,KAAP;AAGD;;AAEDG,EAAAA,iBAAiB,CAACD,KAAD,EAAQE,IAAR,EAAc;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACD;;AAEDK,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEP,MAAAA;AAAF,QAAiB,KAAKD,KAA5B;;AAEA,QAAGC,UAAH,EAAe;AACb,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAP;AACD;;AACD,UAAM;AAAEQ,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,WAAOD,QAAP;AACD;;AA3ByC;;AA8B5C,eAAeZ,aAAf","sourcesContent":["import React from \"react\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(){\n    super();\n\n    this.state = {\n      hasErrored: false,\n    }\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      hasErrored: true\n    }\n  }\n\n  componentDidCatch(error, info) {\n    console.log(error);\n  }\n\n  render () {\n    const { hasErrored } = this.state;\n\n    if(hasErrored) {\n      return <div>Something went wrong</div>\n    }\n    const { children } = this.props;\n    return children;\n  }\n}\n\nexport default ErrorBoundary;"]},"metadata":{},"sourceType":"module"}